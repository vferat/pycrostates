[build-system]
requires = ['setuptools >= 61.0.0']
build-backend = 'setuptools.build_meta'

[project]
name = 'pycrostates'
version = '0.4.0.dev'
description = 'A simple open source Python package for EEG microstate segmentation.'
readme = 'README.md'
license = {file = 'LICENSE'}
requires-python = '>=3.8'
authors = [
    {name = 'Victor Férat', email = 'victor.ferat@unige.ch'},
]
maintainers = [
    {name = 'Victor Férat', email = 'victor.ferat@unige.ch'},
    {name = 'Mathieu Scheltienne', email = 'mathieu.scheltienne@fcbg.ch'},
]
keywords = [
    'python',
    'neuroscience',
    'neuroimaging',
    'eeg',
    'microstates',
    'brain',
]
classifiers = [
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: BSD License',
    'Natural Language :: English',
    'Operating System :: MacOS',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: Unix',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Scientific/Engineering',
]
dependencies = [
    'decorator',
    'importlib-resources; python_version < "3.9"',
    'jinja2',
    'joblib',
    'matplotlib',
    'mne>=1.2',
    'numpy>=1.21',
    'pooch',
    'scikit-learn',
    'scipy',
]

[project.optional-dependencies]
build = ['build', 'twine']
docs = [
    'memory-profiler',
    'numpydoc',
    'pandas',
    'pydata-sphinx-theme',
    'pymatreader',
    'sphinx',
    'sphinxcontrib-bibtex',
    'sphinx-copybutton',
    'sphinx-design',
    'sphinx_gallery',
    'sphinx-issues',
    'seaborn',
]
style = [
    'bibclean',
    'black',
    'codespell',
    'isort',
    'pydocstyle[toml]',
    'ruff',
]
test = [
    'pymatreader',
    'pytest==7.0.1',
    'pytest-azurepipelines',
    'pytest-cov',
]
all = [
    'pycrostates[build]',
    'pycrostates[docs]',
    'pycrostates[style]',
    'pycrostates[test]',
]

[project.urls]
homepage = 'https://pycrostates.readthedocs.io/en/master/'
documentation = 'https://pycrostates.readthedocs.io/en/master/'
source = 'https://github.com/vferat/pycrostates'
tracker = 'https://github.com/vferat/pycrostates/issues'

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
include = ['pycrostates*']
exclude = ['pycrostates*tests']

[tool.setuptools.package-data]
"pycrostates.datasets" = ["**/*.txt"]
"pycrostates.html_templates" = ["repr/*.jinja"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
(
      __pycache__
    | \.github/
    | docs/
    | paper/
    | pycrostates/html_templates/repr
    | setup.py
    | tutorials/
)
'''

[tool.isort]
profile = 'black'
multi_line_output = 3
line_length = 88
py_version = 39
extend_skip_glob = [
    'docs/*',
    'paper/',
    'pycrostates/html_templates/repr/*',
    'setup.py',
    'tutorials/*',
]

[tool.pydocstyle]
convention = 'numpy'
ignore-decorators= '(copy_doc|property|.*setter|.*getter|pyqtSlot|Slot)'
match = '^(?!setup|__init__|test_).*\.py'
match-dir = '^pycrostates.*'
add_ignore = 'D100,D104,D107'

[tool.ruff]
line-length = 88
extend-exclude = [
    "doc",
    "setup.py",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = '6.0'
addopts = '--durations 20 --junit-xml=junit-results.xml --verbose'
filterwarnings = [
    "ignore:Matplotlib is currently using agg:UserWarning",
]

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
    '**/__init__.py',
    '**/pycrostates/_version.py',
    '**/pycrostates/utils/_fixes.py',
    '**/tests/**',
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
]
precision = 2
